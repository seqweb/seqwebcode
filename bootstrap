#!/bin/bash
#
# SeqWeb Bootstrap Script
# 
# This script initializes a SeqWeb development environment by:
# 1. Setting SEQWEBDEV_HOME environment variable
# 2. Creating initial seqweb.conf if none exists
# 3. Creating universal SeqWeb CLI entry point if none exists
# 4. Setting up bash integration
#
# Usage: curl -s https://raw.githubusercontent.com/seqweb/seqwebcode/main/bootstrap | bash
#
# Requirements:
# - Must be run from the intended SeqWeb dev home directory
# - User must have write permissions in the current directory
#

set -e  # Exit on any error

# Save previous value of SEQWEBDEV_HOME if it exists
PREV_SEQWEBDEV_HOME="${SEQWEBDEV_HOME:-}"

# Set SEQWEBDEV_HOME to current directory and export it
export SEQWEBDEV_HOME="$(pwd)"

# Add SeqWeb dev home to PATH for immediate availability
export PATH="$SEQWEBDEV_HOME:$PATH"
echo "Added $SEQWEBDEV_HOME to PATH: $PATH"

echo "Bootstrapping SeqWeb dev home environment in ($SEQWEBDEV_HOME) (was ${PREV_SEQWEBDEV_HOME:-<not set>})"

# Check if seqweb.conf exists, create initial one if not
if [[ -f "seqweb.conf" ]]; then
    echo "Using existing seqweb.conf configuration file"
else
    echo "Creating initial seqweb.conf configuration file..."
    cat > seqweb.conf << 'EOF'
# SeqWeb Development Configuration
# This file contains paths to SeqWeb repositories and other configuration info

[repos]
seqwebcode="$SEQWEBDEV_HOME/seqwebcode"
seqweb="$SEQWEBDEV_HOME/seqweb"
seqwebdata="$SEQWEBDEV_HOME/seqwebdata"
oeisdata="$SEQWEBDEV_HOME/oeisdata"
".github"="$SEQWEBDEV_HOME/.github"
EOF
    echo "Created default seqweb.conf with repo paths as subdirectories under SEQWEBDEV_HOME"
fi

# Always recreate the universal SeqWeb CLI entry point (it's generated, not user data)
echo "Creating universal SeqWeb CLI entry point..."
cat > "$SEQWEBDEV_HOME/seqwebdev" << 'EOF'
#!/bin/bash
# *** This file is auto-generated by the SeqWeb bootstrap process ***

# Universal SeqWeb CLI Entry Point 
# This script uses filesystem discovery to find the seqwebcode repo then delegates to the actual SeqWeb CLI implementation

set -e

# Find seqwebcode directory from seqweb.conf configuration file
# Extract the seqwebcode path from TOML configuration with error handling
if SEQWEBCODE_PATH=$(grep -E '^\s*seqwebcode\s*=' seqweb.conf | head -1 | sed 's/.*=\s*"\([^"]*\)".*/\1/'); then
    if [[ -n "$SEQWEBCODE_PATH" && -d "$SEQWEBCODE_PATH" ]]; then
        echo "Found seqwebcode at: $SEQWEBCODE_PATH"
    else
        echo "Error: Invalid seqwebcode path in config: $SEQWEBCODE_PATH"
        exit 1
    fi
else
    echo "Error: seqwebcode repo location not found in seqweb.conf"
    exit 1
fi

if [ -n "$SEQWEBCODE_PATH" ]; then
    # Construct the path to the implementation entry point
    SEQWEBDEV_ENTRYPOINT="$SEQWEBCODE_PATH/src/python/app/cli/_seqwebdev"
    
    if [ -f "$SEQWEBDEV_ENTRYPOINT" ]; then
        # Ensure the target CLI implementation is executable
        chmod +x "$SEQWEBDEV_ENTRYPOINT"
        # Export the discovered code path
        export SEQWEBCODE_PATH="$SEQWEBCODE_PATH"
        # Set up CLI setup trigger
        export SETUP_CLI="true"
        # Call the actual CLI implementation with all arguments
        exec "$SEQWEBDEV_ENTRYPOINT" "$@"
    else
        echo "Error: Could not find SeqWeb CLI implementation at $SEQWEBDEV_ENTRYPOINT"
        echo "Please ensure seqwebcode repository is cloned correctly"
        echo "See https://www.seqweb.org/quickstart for guidance."
        exit 1
    fi
else
    echo "Error: Could not find seqwebcode repository"
    echo "Please ensure seqwebcode repository is cloned and contains the 'bootstrap' file"
    echo "See https://www.seqweb.org/quickstart for guidance."
    exit 1
fi
EOF
echo "Created universal SeqWeb CLI entry point"

# Make the Universal CLI entry point executable
chmod +x "$SEQWEBDEV_HOME/seqwebdev"

# Detect and modify the appropriate bash file
echo "Detecting bash configuration file..."

# Determine which config file to use based on the actual shell
SHELL_NAME=$(basename "$SHELL" 2>/dev/null || echo "unknown")

# Function to find the best config file for a shell
find_shell_config() {
    local shell_name="$1"
    case "$shell_name" in
        bash)
            for file in "$HOME/.bashrc" "$HOME/.bash_profile" "$HOME/.profile"; do
                [ -f "$file" ] && echo "$file" && return
            done
            echo "$HOME/.bashrc"  # Default if none exist
            ;;
        zsh)
            [ -f "$HOME/.zshrc" ] && echo "$HOME/.zshrc" || echo "$HOME/.zshrc"
            ;;
        fish)
            [ -f "$HOME/.config/fish/config.fish" ] && echo "$HOME/.config/fish/config.fish" || echo "$HOME/.config/fish/config.fish"
            ;;
        *)
            # Fallback for unknown shells - try common files
            for file in "$HOME/.profile" "$HOME/.bashrc" "$HOME/.zshrc"; do
                [ -f "$file" ] && echo "$file" && return
            done
            echo "$HOME/.profile"
            ;;
    esac
}

BASH_FILE=$(find_shell_config "$SHELL_NAME")
echo "Detected shell: $SHELL_NAME, using config file: $BASH_FILE"

# Append the export line and alias to the bash file
echo "Appending SeqWeb configuration to $BASH_FILE..."
echo "" >> "$BASH_FILE"
echo "# SeqWeb development environment" >> "$BASH_FILE"
echo "export SEQWEBDEV_HOME=\"$SEQWEBDEV_HOME\"" >> "$BASH_FILE"
echo "export PATH=\"$SEQWEBDEV_HOME:\$PATH\"" >> "$BASH_FILE"

# Source the bash file to make the environment variable and alias available
echo "Sourcing $BASH_FILE to activate environment..."
source "$BASH_FILE"

echo "SEQWEBDEV_HOME is now set to: $SEQWEBDEV_HOME"
echo "PATH now includes: $SEQWEBDEV_HOME"
echo ""

# Set up universal SeqWeb CLI entry point

echo "SeqWeb bootstrap complete! You can now:"
echo "1. Clone the seqwebcode repository (required for CLI operation)."
echo "2. Clone other repositories as needed."
echo "3. Check/update your 'seqweb.conf' file if needed to give your actual repo locations."
echo "4. Start a new terminal session to use the 'seqwebdev' command."
echo " (The seqwebdev command requires a fresh shell session to pick up PATH changes.)"
