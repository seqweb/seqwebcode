# Development Rules & Preferences

## Directive Management
- When user says "going forward", this establishes a persistent requirement/preference/directive
- These instructions persist indefinitely until modified or removed
- Must be retained across context windows, new threads, sessions, or fresh starts
- Apply this directive to itself

## Communication Style
- Simple, direct interactions
- Minimal preamble/summarization
- DRY (Don't Repeat Yourself) in language
- No apologies, excuses, sales/marketing, gladhanding, or cheerleading
- Focus on development velocity

## Code Style
- Prefer simple, readable implementations
- Avoid over-engineering
- Use established patterns and libraries when appropriate
- Document as needed, but don't over-document

## Project Context
- OEIS is authoritative source (read-only)
- 1:1 correspondence between .seq and .ttl files
- Three-repo architecture: oeisdata (source), seqwebdata (output), seqwebcode (code/docs)
- Languages: Java, Python, Common Lisp (priority order)
- RDF/Turtle format for semantic web compatibility

## Development Approach
- Start with working prototypes
- Iterate quickly
- Focus on core functionality first
- Consider performance for large-scale operations
- Maintain mathematical rigor and OEIS attribution

## File Organization
- Keep related files together
- Use descriptive names
- Organize by language/component in src/
- Separate concerns (docs, code, tests, data)

## Multi-Repo Context
- Cursor workspace includes seqwebcode, seqwebdata, and oeisdata repos
- Default operations target seqwebcode (where Cursor was opened)
- Can freely read/modify files in seqwebcode and seqwebdata
- oeisdata is read-only: can read files but cannot modify or commit
- Explicit context change required when working in seqwebdata repo
- For oeisdata updates: use `git pull` only, never `git push`

## Cursor Indexing Configuration
- DO NOT index oeisdata repository (~400,000 files, read-only data resource)
- DO NOT index seqwebdata repository (generated RDF data, not source code)
- Focus indexing on seqwebcode repository only
- Exclude data/output/, data/intermediate/, data/logs/ from indexing
- These are large data directories, not development code

## Git Workflow
- `git consolidate` directive = complete change consolidation process:
  1. Run `git status` to show pending changes
  2. Run `git add . && git commit -m "..." && git push` as single command
- After consolidate: tree should be clean and repo/local in sync
- Consolidate may capture accumulated changes beyond immediate conversation context
- Summary of pending changes should be equivalent to commit message content 